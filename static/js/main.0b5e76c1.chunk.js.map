{"version":3,"sources":["Background/img/background.jpg","GlobalStyle.js","Background/styled.js","Background/index.js","Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Main/styled.js","Main/index.js","Form/styled.js","Loader/styled.js","Loader/index.js","Form/index.js","Form/useRatesData.js","Footer/styled.js","Footer/index.js","Timer/styled.js","Timer/index.js","Timer/useCurrentDate.js","App.js","serviceWorker.js","index.js","theme.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","BackgroundImage","styled","div","theme","color","white","img","breakpoint","mobileMax","Background","props","children","Wrapper","silver","pastelGreen","Container","Title","h1","green","grey","Header","title","MainDiv","Main","Fieldset","fieldset","darkGreen","Legend","legend","LabelText","span","black","InputField","input","mintGreen","final","css","mauve","SelectField","select","Button","button","Description","p","description","Loading","Failure","cardinal","LoaderAnimation","Loader","Form","useState","amount","setAmount","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","result","setResult","ratesData","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statustext","json","rates","date","useRatesData","onSubmit","event","preventDefault","rateFrom","rateTo","computeResult","containsValue","value","onChange","target","type","step","min","required","name","Object","keys","map","key","readOnly","FooterText","footer","Footer","TimerHeader","Timer","currentDate","Date","setCurrentDate","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","month","weekday","day","hour","minute","second","formatDate","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b5e76c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.901ede01.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before{\r\n         box-sizing: inherit;\r\n    }\r\n\r\n    body{\r\n        font-family: 'Lora', sans-serif;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport img from \"./img/background.jpg\";\r\n\r\nexport const BackgroundImage = styled.div`\r\n    padding: 50px;\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    background-image: url(${img});\r\n    background-position: 40%;\r\n    background-attachment: scroll;\r\n    min-height: 100vh;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        padding: 10px;\r\n        background-position: bottom;\r\n        background-size: cover;\r\n    }\r\n`;","import React from 'react';\r\nimport { BackgroundImage } from \"./styled\";\r\n\r\nconst Background = (props) => (\r\n    <BackgroundImage img={\"./img/background.jpg\"}>\r\n        {props.children}\r\n    </BackgroundImage>\r\n)\r\n\r\nexport default Background;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n    border: solid 1px ${({ theme }) => theme.color.silver};\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.pastelGreen};\r\n`;","import React from 'react';\r\nimport { Wrapper} from \"./styled\";\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <Wrapper>\r\n            {props.children}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    padding: 10px;\r\n    margin: 10px auto;\r\n    max-width: 800px;\r\n    color: ${({ theme }) => theme.color.white};\r\n    background-color: ${({ theme }) => theme.color.green};\r\n    border-radius: 10px;\r\n    border solid 1px ${({ theme }) => theme.color.grey};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px){\r\n        margin: 20px auto;\r\n        font-size: 15px;\r\n        text-align: center;\r\n    }\r\n`;","import React from 'react';\r\nimport { Title } from \"./styled\";\r\n\r\nconst Header = ({ title }) => {\r\n\r\n    return (\r\n        <header>\r\n            <Title>{title}</Title>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MainDiv = styled.div`\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport { MainDiv } from \"./styled\";\r\n\r\nconst Main = (props) => (\r\n    <MainDiv>{props.children}</MainDiv>\r\n)\r\n\r\nexport default Main;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 1px solid ${({ theme }) => theme.color.darkGreen};\r\n    background-color: ${({ theme }) => theme.color.silver};\r\n    color: ${({ theme }) => theme.color.white};\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: ${({ theme }) => theme.color.green};\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    border: 2px solid ${({ theme }) => theme.color.grey};\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    padding: 10px;\r\n    width: 200px;\r\n    max-width: 100%;\r\n    display: inline-block;\r\n    color: ${({ theme }) => theme.color.black};\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.mintGreen};\r\n    border: 2px solid ${({ theme }) => theme.color.grey};\r\n    max-width: 200px;\r\n    width: 100%;\r\n\r\n    ${({final}) => final && css`\r\n        background-color: ${({ theme }) => theme.color.mauve};\r\n    `}\r\n`;\r\n\r\nexport const SelectField = styled.select`\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.mintGreen};\r\n    border: 2px solid ${({ theme }) => theme.color.grey};\r\n    max-width: 200px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme.color.darkGreen};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border-radius: 10px;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    \r\n    ${({description}) => description && css`\r\n        text-align: center;\r\n        color: ${({ theme }) => theme.color.white};\r\n    `}\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n    color: ${({ theme }) => theme.color.black};\r\n    text-align: center;\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n    color: ${({ theme }) => theme.color.cardinal};\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const LoaderAnimation = styled.div`\r\n    border: 16px solid ${({ theme }) => theme.color.silver};\r\n    border-top: 16px solid ${({ theme }) => theme.color.mintGreen};\r\n    border-radius: 50%;\r\n    width: 120px;\r\n    height: 120px;\r\n    margin: auto;\r\n    animation: spin 2s linear infinite;\r\n\r\n    @keyframes spin{\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n`;","import React from 'react';\r\nimport { LoaderAnimation } from \"./styled\"\r\n\r\nconst Loader = () => (\r\n    <LoaderAnimation />\r\n)\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport { Fieldset, Legend, LabelText, InputField, SelectField, Button, Description, Loading, Failure } from \"./styled\";\r\nimport Loader from \"../Loader\"\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nconst Form = () => {\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currencyFrom, setCurrencyFrom] = useState(\"PLN\");\r\n  const [currencyTo, setCurrencyTo] = useState(\"EUR\");\r\n  const [result, setResult] = useState();\r\n  const ratesData = useRatesData();\r\n\r\n  const computeResult = (currencyFrom, currencyTo, amount) => {\r\n    const rateFrom = ratesData.rates[currencyFrom];\r\n    const rateTo = ratesData.rates[currencyTo];\r\n\r\n    setResult((amount / rateFrom) * rateTo);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    computeResult(currencyFrom, currencyTo, amount);\r\n  }\r\n\r\n  return (\r\n    ratesData.state === \"loading\"\r\n      ? (\r\n        <Loading>\r\n          <Loader />\r\n          Trwa pobieranie kursów walut z Europejskiego Banku Centralnego <br /> to moża zająć chwilkę ;)\r\n        </Loading>\r\n      )\r\n      : (\r\n        ratesData.state === \"error\" ? (\r\n          <Failure>\r\n            Coś poszło nie tak, sprawdź swoje połącznie z internetem a następnie przeładuj stronę.\r\n          </Failure>\r\n        )\r\n          : (\r\n            <form onSubmit={onFormSubmit}>\r\n              <Fieldset>\r\n                <Legend>Przelicznik Walut</Legend>\r\n                <p>\r\n                  <label>\r\n                    <LabelText>Ile chcę wymienić: </LabelText>\r\n                    <InputField\r\n                      containsValue\r\n                      value={amount}\r\n                      onChange={(event) => setAmount(event.target.value)}\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                      required\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    <SelectField\r\n                      name=\"userCurrency\"\r\n                      value={currencyFrom}\r\n                      onChange={(event) => setCurrencyFrom(event.target.value)}\r\n                    >\r\n                      {Object.keys(ratesData.rates).map(((currencyFrom) => (\r\n                        <option\r\n                          key={currencyFrom}\r\n                          value={currencyFrom}\r\n                        >\r\n                          {currencyFrom}\r\n                        </option>\r\n                      )))}\r\n                    </SelectField>\r\n                  </label>\r\n                </p>\r\n\r\n                <p>\r\n                  <label>\r\n                    <LabelText>Ile dostanę: </LabelText>\r\n                    <InputField\r\n                      containsValue\r\n                      final\r\n                      type=\"number\"\r\n                      value={result}\r\n                      readOnly\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    <SelectField\r\n                      name=\"chosenCurrency\"\r\n                      value={currencyTo}\r\n                      onChange={(event) => setCurrencyTo(event.target.value)}\r\n                      required>\r\n                      {Object.keys(ratesData.rates).map(((currencyTo) => (\r\n                        <option\r\n                          key={currencyTo}\r\n                          value={currencyTo}\r\n                        >\r\n                          {currencyTo}\r\n                        </option>\r\n                      )))}\r\n                    </SelectField>\r\n                  </label>\r\n                </p>\r\n              </Fieldset>\r\n              <p>\r\n                <Button>Przelicz</Button>\r\n              </p>\r\n              <Description description>\r\n                Kursy walut pobierane są z Europejskiego Banku Centralnego.<br />\r\n          Aktualne na dzień {ratesData.date}\r\n              </Description>\r\n            </form>\r\n          ))\r\n  )\r\n}\r\n\r\nexport default Form;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const[ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n      });\r\n      \r\n      useEffect(() => {\r\n        const fetchRates = async () => {\r\n          try {\r\n            const response = await fetch(\"https://api.exchangerate.host/latest&base=PLN\");\r\n      \r\n            if(!response.ok) {\r\n              throw new Error(response.statustext);\r\n            }\r\n            const {rates, date} = await response.json();\r\n      \r\n            setRatesData({\r\n              state: \"success\",\r\n              rates,\r\n              date,\r\n            });\r\n          }\r\n          catch {\r\n            setRatesData({\r\n              state: \"error\",\r\n            });\r\n          }   \r\n        }\r\n        \r\n        setTimeout(fetchRates, 2000);\r\n      }, []);\r\n\r\n      return ratesData;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const FooterText = styled.footer`\r\n    font-size: 10px;\r\n    text-align: center;\r\n`;","import React from 'react';\r\nimport { FooterText } from \"./styled\";\r\n\r\nconst Footer = () => (\r\n    <FooterText>Strona wykonana przez Łukasza Krzemińskiego</FooterText>\r\n)\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const TimerHeader = styled.p`\r\n    text-align: right;\r\n    padding: 10px;\r\n    margin: 0 20px;\r\n    color: ${({ theme }) => theme.color.white};\r\n    font-family: monospace;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin: 0 10px;\r\n        font-size: 10px;\r\n    }\r\n`;","import React from 'react';\r\nimport { TimerHeader } from \"./styled\"\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (currentDate) => currentDate.toLocaleString(undefined, {\r\n        month: \"long\",\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n    });\r\n\r\nconst Timer = () => {\r\n    const currentDate = useCurrentDate();\r\n    return (\r\n        <TimerHeader>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(currentDate)}\r\n        </TimerHeader>\r\n    )\r\n};\r\n\r\nexport default Timer;","import {useState, useEffect} from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n                setCurrentDate(new Date());\r\n        }, 1000);\r\n\r\n        return () =>{\r\n            clearInterval(intervalId);\r\n        }\r\n        \r\n    }, []);\r\n\r\n    return currentDate;\r\n};","import React from 'react';\r\nimport Background from \"./Background\";\r\nimport Container from \"./Container\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Form from \"./Form\";\r\nimport Footer from \"./Footer\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Background>\r\n        <Container>\r\n          <Timer />\r\n          <Header title=\"Przelicz zanim wyjedziesz na zagraniczne wakacje!\" />\r\n          <Main>\r\n            <Form/>\r\n          </Main>\r\n        </Container>\r\n      <Footer />\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    color: {\r\n        white: \"#fff\",\r\n        green: \"#00FF00\",\r\n        darkGreen: \"#009900\",\r\n        mintGreen: \"#99FF99\",\r\n        silver: \"#ccc\",\r\n        grey: \"#7c7c7c\",\r\n        mauve: \"#bb99ff\",\r\n        pastelGreen: \"#90A793\",\r\n        black: \"#000\",\r\n        cardinal: \"#D42527\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n\r\n};"],"sourceRoot":""}