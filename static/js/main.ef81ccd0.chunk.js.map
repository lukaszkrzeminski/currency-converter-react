{"version":3,"sources":["Background/styled.js","Background/index.js","Header/styled.js","Header/index.js","Main/styled.js","Main/index.js","Form/styled.js","Form/index.js","Footer/styled.js","Footer/index.js","Timer/styled.js","Timer/index.js","Timer/useCurrentDate.js","App.js","serviceWorker.js","index.js","Background/img/background.jpg"],"names":["BackgroundImage","styled","div","img","Background","props","children","Title","h1","Header","title","MainDiv","Main","Fieldset","fieldset","Legend","legend","LabelText","span","InputField","input","final","css","SelectField","select","Button","button","Form","computeResult","newUserValue","setNewUserValue","startCurrency","setStartCurrency","finalCurrency","setFinalCurrency","finalValue","onSubmit","event","preventDefault","containsValue","value","onChange","target","type","step","min","required","name","readOnly","FooterText","footer","Footer","TimerHeader","p","Timer","currentDate","useState","Date","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","month","weekday","day","hour","minute","second","formatDate","App","setFinalValue","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ef81ccd0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport img from \"./img/background.jpg\";\r\n\r\nexport const BackgroundImage = styled.div`\r\n    padding: 50px;\r\n    background-color: white;\r\n    background-image: url(${img});\r\n    background-position: 40%;\r\n    background-attachment: scroll;\r\n    min-height: 100vh;\r\n\r\n    @media (max-width: 767px) {\r\n        padding: 10px;\r\n        background-position: bottom;\r\n        background-size: cover;\r\n    }\r\n`;","import React from 'react';\r\nimport { BackgroundImage } from \"./styled\";\r\n\r\nconst Background = (props) => (\r\n    <BackgroundImage img={\"./img/background.jpg\"}>\r\n        {props.children};\r\n    </BackgroundImage>\r\n)\r\n\r\nexport default Background;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    padding: 10px;\r\n    margin: 10px auto;\r\n    max-width: 800px;\r\n    color: white;\r\n    background-color: hsl(120, 100%, 50%);\r\n    border-radius: 10px;\r\n\r\n    @media (max-width: 767px){\r\n        margin: 20px auto;\r\n        font-size: 15px;\r\n        text-align: center;\r\n    }\r\n`;","import React from 'react';\r\nimport { Title } from \"./styled\";\r\n\r\nconst Header = ({ title }) => {\r\n\r\n    return (\r\n        <header>\r\n            <Title>{title}</Title>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MainDiv = styled.div`\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport { MainDiv } from \"./styled\";\r\n\r\nconst Main = (props) => (\r\n    <MainDiv>{props.children};</MainDiv>\r\n)\r\n\r\nexport default Main;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 1px solid hsl(120, 100%, 30%);\r\n    background-color: hsl(0, 0%, 80%);\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: hsl(120, 100%, 50%);\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    border: 2px solid rgb(124, 124, 124);\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    padding: 10px;\r\n    width: 200px;\r\n    max-width: 100%;\r\n    display: inline-block;\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: hsl(120, 100%, 80%);\r\n    border: 2px solid rgb(124, 124, 124);\r\n    max-width: 200px;\r\n    width: 100%;\r\n\r\n    ${({final}) => final && css`\r\n        background-color: hsl(260, 100%, 80%);\r\n    `}\r\n`;\r\n\r\nexport const SelectField = styled.select`\r\n    margin: 5px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    background-color: hsl(120, 100%, 80%);\r\n    border: 2px solid rgb(124, 124, 124);\r\n    max-width: 200px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    width: 100%;\r\n    background-color: hsl(120, 100%, 20%);\r\n    color: white;\r\n    border-radius: 10px;\r\n\r\n    &:hover {\r\n        background-color: hsl(120, 100%, 30%);\r\n    }\r\n    &:active {\r\n        background-color: hsl(120, 100%, 40%);\r\n    }\r\n`;","import React from 'react';\r\nimport { Fieldset, Legend, LabelText, InputField, SelectField, Button } from \"./styled\";\r\n\r\nconst Form = ({ computeResult, newUserValue, setNewUserValue, startCurrency, setStartCurrency, finalCurrency, setFinalCurrency, finalValue }) => {\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    computeResult(startCurrency, finalCurrency, newUserValue, finalValue);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit}>\r\n      <Fieldset>\r\n        <Legend>Przelicznik Walut</Legend>\r\n        <p>\r\n          <label>\r\n            <LabelText>Ile chcę wymienić: </LabelText>\r\n            <InputField\r\n              containsValue\r\n              value={newUserValue}\r\n              onChange={(event) => setNewUserValue(event.target.value)}\r\n              type=\"number\" \r\n              step=\"0.01\" \r\n              min=\"0\" \r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <SelectField \r\n            name=\"userCurrency\"\r\n            value={startCurrency}\r\n            onChange={(event) => setStartCurrency(event.target.value)}\r\n            >\r\n              <option value=\"PLN\">PLN</option>\r\n              <option value=\"EUR\">EUR</option>\r\n              <option value=\"USD\">USD</option>\r\n            </SelectField>\r\n          </label>\r\n        </p>\r\n\r\n        <p>\r\n          <label>\r\n            <LabelText>Ile dostanę: </LabelText>\r\n            <InputField\r\n              containsValue\r\n              final\r\n              type=\"number\"\r\n              value={finalValue}\r\n              readOnly\r\n            />\r\n          </label>\r\n          <label>\r\n            <SelectField \r\n            name=\"chosenCurrency\"\r\n            value={finalCurrency}\r\n            onChange={(event) => setFinalCurrency(event.target.value)} \r\n            required>\r\n              <option value=\"PLN\">PLN</option>\r\n              <option value=\"EUR\">EUR</option>\r\n              <option value=\"USD\">USD</option>\r\n            </SelectField>\r\n          </label>\r\n        </p>\r\n      </Fieldset>\r\n      <p>\r\n        <Button>Przelicz</Button>\r\n      </p>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const FooterText = styled.footer`\r\n    font-size: 10px;\r\n    text-align: center;\r\n`;","import React from 'react';\r\nimport { FooterText } from \"./styled\";\r\n\r\nconst Footer = () => (\r\n    <FooterText>Strona wykonana przez Łukasza Krzemińskiego</FooterText>\r\n)\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const TimerHeader = styled.p`\r\n    text-align: right;\r\n    padding: 10px;\r\n    margin: 0 20px;\r\n    color: white;\r\n    font-family: monospace;\r\n\r\n    @media (max-width: 767px) {\r\n        margin: 0 10px;\r\n        font-size: 10px;\r\n    }\r\n`;","import React from 'react';\r\nimport { TimerHeader } from \"./styled\"\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (currentDate) => currentDate.toLocaleString(undefined, {\r\n        month: \"long\",\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n    });\r\n\r\nconst Timer = () => {\r\n    const currentDate = useCurrentDate();\r\n    return (\r\n        <TimerHeader>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(currentDate)}\r\n        </TimerHeader>\r\n    )\r\n};\r\n\r\nexport default Timer;","import {useState, useEffect} from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n                setCurrentDate(new Date());\r\n        }, 1000);\r\n\r\n        return () =>{\r\n            clearInterval(intervalId);\r\n        }\r\n        \r\n    }, []);\r\n\r\n    return currentDate;\r\n};","import React, {useState} from 'react';\r\nimport Background from \"./Background\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Form from \"./Form\";\r\nimport Footer from \"./Footer\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction App() {\r\n  const [newUserValue, setNewUserValue] = useState(\"\");\r\n  const [startCurrency, setStartCurrency] = useState(\"PLN\");\r\n  const [finalCurrency, setFinalCurrency] = useState(\"PLN\");\r\n  const [finalValue, setFinalValue] = useState(\"\");\r\n\r\n  const computeResult = (startCurrency, finalCurrency, newUserValue, finalValue) => {\r\n    const PLNtoEUR = 0.22;\r\n    const PLNtoUSD = 0.25;\r\n    const EURtoUSD = 1.12;\r\n    const EURtoPLN = 1 / PLNtoEUR;\r\n    const USDtoPLN = 1 / PLNtoUSD;\r\n    const USDtoEUR = 1 / EURtoUSD;\r\n\r\n    switch (startCurrency + finalCurrency) {\r\n      case \"PLNEUR\":\r\n        setFinalValue(finalValue => (PLNtoEUR * newUserValue).toFixed(2))\r\n        break;\r\n      case \"PLNUSD\":\r\n        setFinalValue(finalValue => (PLNtoUSD * newUserValue).toFixed(2))\r\n        break;\r\n      case \"EURUSD\":\r\n        setFinalValue(finalValue => (EURtoUSD * newUserValue).toFixed(2))\r\n        break;\r\n      case \"EURPLN\":\r\n        setFinalValue(finalValue => (EURtoPLN * newUserValue).toFixed(2))\r\n        break;\r\n      case \"USDEUR\":\r\n        setFinalValue(finalValue => (USDtoEUR * newUserValue).toFixed(2))\r\n        break;\r\n      case \"USDPLN\":\r\n        setFinalValue(finalValue => (USDtoPLN * newUserValue).toFixed(2))\r\n        break;\r\n      default:\r\n        setFinalValue(finalValue => newUserValue)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <Timer />\r\n      <Header title=\"Przelicz zanim wyjedziesz na zagraniczne wakacje!\" />\r\n      <Main>\r\n        <Form\r\n        newUserValue={newUserValue}\r\n        setNewUserValue={setNewUserValue}\r\n        startCurrency={startCurrency}\r\n        setStartCurrency={setStartCurrency}\r\n        finalCurrency={finalCurrency}\r\n        setFinalCurrency={setFinalCurrency}\r\n        finalValue={finalValue}\r\n        setFinalValue={setFinalValue}\r\n        computeResult={computeResult}/>\r\n      </Main>\r\n      <Footer />\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.901ede01.jpg\";"],"sourceRoot":""}