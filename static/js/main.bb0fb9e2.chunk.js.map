{"version":3,"sources":["Background/index.js","Header/index.js","Main/index.js","Form/index.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Background","props","className","children","Header","title","Main","Form","computeResult","newUserValue","setNewUserValue","startCurrency","setStartCurrency","finalCurrency","setFinalCurrency","finalValue","onSubmit","event","preventDefault","value","onChange","target","type","step","min","required","name","readOnly","Footer","App","useState","setFinalValue","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb0fb9e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Background = (props) => (\r\n    <div className=\"background\">\r\n        {props.children};\r\n    </div>\r\n)\r\n\r\nexport default Background;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Main = (props) => (\r\n    <div className=\"main\">\r\n        {props.children};\r\n    </div>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ computeResult, newUserValue, setNewUserValue, startCurrency, setStartCurrency, finalCurrency, setFinalCurrency, finalValue }) => {\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    computeResult(startCurrency, finalCurrency, newUserValue, finalValue);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit}>\r\n      <fieldset className=\"form__fieldset\">\r\n        <legend className=\"form__legend\">\r\n          Przelicznik Walut\r\n      </legend>\r\n        <p>\r\n          <label>\r\n            <span className=\"form__labelText\">Ile chcę wymienić: </span>\r\n            <input\r\n              value={newUserValue}\r\n              onChange={(event) => setNewUserValue(event.target.value)}\r\n              className=\"form__field form__field--value\" \r\n              type=\"number\" \r\n              step=\"0.01\" \r\n              min=\"0\" \r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <select \r\n            className=\"form__field form__field--select\" \r\n            name=\"userCurrency\"\r\n            value={startCurrency}\r\n            onChange={(event) => setStartCurrency(event.target.value)}\r\n            >\r\n              <option value=\"PLN\">PLN</option>\r\n              <option value=\"EUR\">EUR</option>\r\n              <option value=\"USD\">USD</option>\r\n            </select>\r\n          </label>\r\n        </p>\r\n\r\n        <p>\r\n          <label>\r\n            <span className=\"form__labelText\">Ile dostanę: </span>\r\n            <input\r\n              className=\"form__field form__field--value form__field--final\" \r\n              type=\"number\"\r\n              value={finalValue}\r\n              readOnly\r\n            />\r\n          </label>\r\n          <label>\r\n            <select \r\n            className=\"form__field form__field--select\" \r\n            name=\"chosenCurrency\"\r\n            value={finalCurrency}\r\n            onChange={(event) => setFinalCurrency(event.target.value)} \r\n            required>\r\n              <option value=\"PLN\">PLN</option>\r\n              <option value=\"EUR\">EUR</option>\r\n              <option value=\"USD\">USD</option>\r\n            </select>\r\n          </label>\r\n        </p>\r\n      </fieldset>\r\n      <p>\r\n        <button className=\"form__button\">Przelicz</button>\r\n      </p>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">Strona wykonana przez Łukasza Krzemińskiego</footer>\r\n)\r\n\r\nexport default Footer;","import React, {useState} from 'react';\nimport Background from \"./Background\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [newUserValue, setNewUserValue] = useState(\"\");\n  const [startCurrency, setStartCurrency] = useState(\"PLN\");\n  const [finalCurrency, setFinalCurrency] = useState(\"PLN\");\n  const [finalValue, setFinalValue] = useState(\"\");\n\n  const computeResult = (startCurrency, finalCurrency, newUserValue, finalValue) => {\n    const PLNtoEUR = 0.22;\n    const PLNtoUSD = 0.25;\n    const EURtoUSD = 1.12;\n    const EURtoPLN = 1 / PLNtoEUR;\n    const USDtoPLN = 1 / PLNtoUSD;\n    const USDtoEUR = 1 / EURtoUSD;\n\n    switch (startCurrency + finalCurrency) {\n      case \"PLNEUR\":\n        setFinalValue(finalValue => (PLNtoEUR * newUserValue).toFixed(2))\n        break;\n      case \"PLNUSD\":\n        setFinalValue(finalValue => (PLNtoUSD * newUserValue).toFixed(2))\n        break;\n      case \"EURUSD\":\n        setFinalValue(finalValue => (EURtoUSD * newUserValue).toFixed(2))\n        break;\n      case \"EURPLN\":\n        setFinalValue(finalValue => (EURtoPLN * newUserValue).toFixed(2))\n        break;\n      case \"USDEUR\":\n        setFinalValue(finalValue => (USDtoEUR * newUserValue).toFixed(2))\n        break;\n      case \"USDPLN\":\n        setFinalValue(finalValue => (USDtoPLN * newUserValue).toFixed(2))\n        break;\n      default:\n        setFinalValue(finalValue => newUserValue)\n    }\n  }\n\n  return (\n    <Background>\n      <Header title=\"Przelicz zanim wyjedziesz na zagraniczne wakacje!\" />\n      <Main>\n        <Form\n        newUserValue={newUserValue}\n        setNewUserValue={setNewUserValue}\n        startCurrency={startCurrency}\n        setStartCurrency={setStartCurrency}\n        finalCurrency={finalCurrency}\n        setFinalCurrency={setFinalCurrency}\n        finalValue={finalValue}\n        setFinalValue={setFinalValue}\n        computeResult={computeResult}/>\n      </Main>\n      <Footer />\n    </Background>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}